@startuml

title __LOGGER's Class Diagram__\n

  namespace enstabretagne.base {
    namespace logger {
      class enstabretagne.base.logger.CategoriesGenerator {
          ~ df : DecimalFormat
          ~ index_df : DecimalFormat
          ~ segments : List<Segment>
          + CategoriesGenerator()
          + getSegmentOf()
          {static} + main()
          + toString()
      }
    }
  }
  

  namespace enstabretagne.base {
    namespace logger {
      class enstabretagne.base.logger.CategoriesGenerator.Segment {
          ~ high : double
          ~ index : int
          ~ low : double
          + Segment()
          + getMoy()
          + isIn()
          + toString()
      }
    }
  }
  

  namespace enstabretagne.base {
    namespace logger {
      interface enstabretagne.base.logger.ILogger {
          {abstract} + checkLoggerConf()
          {abstract} + clear()
          {abstract} + close()
          {abstract} + log()
          {abstract} + open()
      }
    }
  }
  

  namespace enstabretagne.base {
    namespace logger {
      interface enstabretagne.base.logger.IRecordable {
          {abstract} + getClassement()
          {abstract} + getRecords()
          {abstract} + getTitles()
      }
    }
  }
  

  namespace enstabretagne.base {
    namespace logger {
      enum LogLevels {
        data
        dataRecordable
        dataSimple
        detail
        error
        fatal
        information
        warning
        s
      }
    }
  }
  

  namespace enstabretagne.base {
    namespace logger {
      class enstabretagne.base.logger.Logger {
          ~ firstTitleDataSimple : HashMap<String, String[]>
          {static} ~ terminated : boolean
          - dataLogAbilities : HashMap<Class<?>, TypeAnalyseForLog>
          {static} - log : Logger
          - loggers : List<ILogger>
          {static} + CloseAndReinit()
          {static} + Data()
          {static} + DataSimple()
          {static} + Detail()
          {static} + Error()
          {static} + Fatal()
          {static} + Information()
          + Init()
          + Logger()
          {static} + Terminate()
          {static} + Warning()
          + addLogger()
          + clearLoggers()
          + close()
          + finalize()
          {static} + isInitialized()
          {static} + setDateProvider()
          + setSimulationDateProvider()
          # log()
          - analyseObject()
          - log()
      }
    }
  }
  

  namespace enstabretagne.base {
    namespace logger {
      enum LoggerParamsNames {
        DirectoryName
        FileName
        LoggerKind
        RecordStartTime
        paramName
      }
    }
  }
  

  namespace enstabretagne.base {
    namespace logger {
      class enstabretagne.base.logger.LoggerSettings {
          + ClearAllBefore : boolean
          + classToFilter : List<String>
          + loggerConfs : List<LoggerConf>
          {static} + settings : LoggerSettings
          {static} - loggerSettingsFileName : String
          + LoggerSettings()
      }
    }
  }
  

  namespace enstabretagne.base {
    namespace logger {
      interface enstabretagne.base.logger.ToRecord {
          {abstract} + name()
      }
    }
  }
  

  enstabretagne.base.logger.CategoriesGenerator o-- enstabretagne.base.logger.CategoriesGenerator.Segment : defaultSegment
  enstabretagne.base.logger.CategoriesGenerator +-down- enstabretagne.base.logger.CategoriesGenerator.Segment
  enstabretagne.base.logger.Logger o-- enstabretagne.simulation.core.ISimulationDateProvider : simulationDateProvider


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
