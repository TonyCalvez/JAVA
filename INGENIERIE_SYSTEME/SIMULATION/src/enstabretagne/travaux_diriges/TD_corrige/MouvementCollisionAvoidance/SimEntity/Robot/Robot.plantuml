@startuml

title __ROBOT's Class Diagram__\n

  namespace enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance {
    namespace SimEntity.Robot {
      class enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.DiscoveredMap {
          - edgeList : List<IEdge>
          - path : LinkedList<IVertex>
          - resolution : int
          - robotUsefulRange : double
          - vertexDB : HashMap<String, Point3D>
          - vertexList : List<IVertex>
          + DiscoveredMap()
          + discover()
          + generatePath()
          + getNext()
          - closestPoint()
          - createEdge()
          - find()
          - isEdgeAllowed()
      }
    }
  }
  

  namespace enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance {
    namespace SimEntity.Robot {
      interface enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.IMover {
          {abstract} + getAcceleration()
          {abstract} + getAccelerationRotationXYZ()
          {abstract} + getDurationToReach()
          {abstract} + getPosition()
          {abstract} + getRotationXYZ()
          {abstract} + getVitesse()
          {abstract} + getVitesseRotationXYZ()
      }
    }
  }
  

  namespace enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance {
    namespace SimEntity.Robot {
      class enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.Robot {
          - healthPoint : double
          - isReturning : boolean
          - lineOfSightBadRobot : Cylinder
          - obstacleBounds : List<Bounds>
          + Robot()
          + attach3DRepresentation()
          + canSeeBadRobot()
          + canSeeTable()
          + generateBoundsForObstacles()
          + get3DRepresentation()
          + getAcceleration()
          + getAccelerationRotationXYZ()
          + getBounds()
          + getColor()
          + getInitialPosition()
          + getLineOfSightBadRobot()
          + getNext()
          + getNominalRotationSpeed()
          + getNominalSpeed()
          + getObstacleBounds()
          + getPosition()
          + getRange()
          + getRotationSpeedXYZ()
          + getRotationXYZ()
          + getSize()
          + getSpeed()
          + getType()
          + getVitesse()
          + getVitesseRotationXYZ()
          + initiateReturn()
          + isAlive()
          + isReturning()
          + onParentSet()
          + resolveCriticalHit()
          + resolveSimpleHit()
          + stopReturn()
          # AfterActivate()
          # AfterDeactivated()
          # AfterTerminated()
          # BeforeActivating()
          # BeforeDeactivating()
          # initializeSimEntity()
          - checkIfDamaged()
          - checkIfDead()
          - getIdentificationRange()
          - getMap()
          - initFirstMouvementSequenceur()
          - isBad()
          - isDamaged()
          - setInitialState()
      }
    }
  }
  

  namespace enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance {
    namespace SimEntity.Robot {
      class enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.Robot.DetectEvent {
          + DetectEvent()
          + Process()
          - isBadRobotIdentified()
      }
    }
  }
  

  namespace enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance {
    namespace SimEntity.Robot {
      class enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.Robot.JustDamagedEvent {
          + Process()
      }
    }
  }
  

  namespace enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance {
    namespace SimEntity.Robot {
      class enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.RobotFeatures {
          - accelerationMax : double
          - rotationSpeedMax : double
          - taille : double
          - vitesseMax : double
          + RobotFeatures()
          + getEmsf()
          + getRotationSpeedMax()
          + getTaille()
          + getType()
          + getVitesseMax()
      }
    }
  }
  

  namespace enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance {
    namespace SimEntity.Robot {
      enum ROBOT_TYPE {
        ASSAULT
        RECONNAISSANCE
      }
    }
  }
  

  namespace enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance {
    namespace SimEntity.Robot {
      class enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.RobotInit {
          - couleur : Color
          - isBad : boolean
          - name : String
          + RobotInit()
          + getCouleur()
          + getMvtSeqIni()
          + getName()
          + getPosInit()
          + isBad()
      }
    }
  }
  

  enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.DiscoveredMap o-- enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.Robot : robot
  enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.Robot .up.|> enstabretagne.monitor.interfaces.IMovable
  enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.Robot .up.|> enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.Representation3D.IRobot3D
  enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.Robot -up-|> enstabretagne.simulation.components.implementation.SimEntity
  enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.Robot o-- enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.DiscoveredMap : map
  enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.Robot o-- enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.RobotFeatures : rFeat
  enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.Robot o-- enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.RobotInit : rIni
  enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.Robot o-- enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.Representation3D.RobotRepresentation3D : rep3D
  enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.Robot o-- enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.MouvementSequenceur.EntityMouvementSequenceur : rmv
  enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.Robot +-down- enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.Robot.DetectEvent
  enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.Robot +-down- enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.Robot.JustDamagedEvent
  enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.Robot.DetectEvent -up-|> enstabretagne.simulation.core.implementation.SimEvent
  enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.Robot.DetectEvent o-- enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.Robot : robot
  enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.Robot.JustDamagedEvent -up-|> enstabretagne.simulation.core.implementation.SimEvent
  enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.RobotFeatures -up-|> enstabretagne.simulation.components.data.SimFeatures
  enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.RobotFeatures o-- enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.MouvementSequenceur.EntityMouvementSequenceurFeature : emsf
  enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.RobotFeatures o-- enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.RobotFeatures.ROBOT_TYPE : type
  enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.RobotFeatures +-down- enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.RobotFeatures.ROBOT_TYPE
  enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.RobotInit -up-|> enstabretagne.simulation.components.data.SimInitParameters
  enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.Robot.RobotInit o-- enstabretagne.travaux_diriges.TD_corrige.MouvementCollisionAvoidance.SimEntity.MouvementSequenceur.EntityMouvementSequenceurInit : mvtSeqIni


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
